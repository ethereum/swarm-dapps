/*******************************
 * [_style.scss]
 * The core scss style sheet
 ******************************/
/**
 * { Dependencies }
 */
/* .contentFieldForm, .ck-editor, .ck-editor__main{
	height: 100% !important;
} */
/**
 * { CKEDITOR }
 */
.ck-editor, .ck-editor-bottom {
  border: 0 !important; }

button:hover {
  cursor: pointer !important; }

body, html, main {
  padding: 0 !important; }

.ckeditor {
  background: #fafafa; }

::selection {
  background-color: #3297FD  !important;
  /* WebKit/Blink Browsers */ }

::-moz-selection {
  background-color: #3399FF !important;
  /* Gecko Browsers */ }

/**
 * { Markdown field }
 */
#markdownField {
  display: none;
  border: 0 !important;
  width: 100%;
  padding-top: 1.5em;
  box-sizing: content-box;
  margin: 0 !important;
  background: #fafafa !important;
  font: 100 16px 'Source Sans Pro', 'Helvetica Neue', arial, sans-serif !important;
  color: #111 !important;
  resize: none !important; }

.textarea-container {
  position: relative; }

textarea, .textarea-size {
  min-height: 25px;
  font-family: sans-serif;
  border: 1px solid;
  overflow: hidden;
  width: 100%; }

textarea {
  height: 100%;
  position: absolute;
  resize: none;
  white-space: normal; }

.textarea-size {
  visibility: hidden;
  white-space: pre-wrap;
  word-wrap: break-word;
  overflow-wrap: break-word; }

/**
 * { Misc }
 */
.hidden {
  display: none; }
@charset "UTF-8";
/**
 * Makes element unselectable.
 */
/**
 * A class which hides an element in DOM.
 */
.ck-hidden {
  display: none; }

/**
 * Wraps (S)CSS into .ck-editor namespace.
 */
/**
 * Resets an element, ignoring its children.
 */
.ck-reset, .ck-reset_all, .ck-reset_all *, .ck-reset_all a, .ck-reset_all textarea {
  box-sizing: border-box;
  width: auto;
  height: auto;
  position: static; }

/**
 * Resets an element AND its children.
 */
/**
 * Default width/height of an icon.
 */
svg.ck-icon {
  min-width: 20px;
  min-height: 20px;
  font-size: 1em;
  vertical-align: middle;
  color: inherit;
  cursor: inherit; }
  svg.ck-icon * {
    cursor: inherit;
    color: inherit;
    fill: currentColor; }

/**
 * Applies styles to the main part of the tooltip.
 */
/**
 * Applies styles to the arrow part of the tooltip.
 */
/**
 * Applies styles to both arrow and main part of the tooltip.
 */
/**
 * Enables the tooltip, which is the tooltip is in DOM but
 * not yet displayed.
 */
/**
 * Disables the tooltip making it disappear from DOM.
 */
/**
 * Shows the tooltip, which is already in DOM.
 * Requires `ck-tooltip_enabled` first.
 */
[data-ck-tooltip]::after {
  visibility: hidden;
  opacity: 0;
  display: none;
  position: absolute;
  z-index: 999;
  pointer-events: none;
  -webkit-backface-visibility: hidden; }

[data-ck-tooltip]::before {
  visibility: hidden;
  opacity: 0;
  display: none;
  position: absolute;
  z-index: 999;
  pointer-events: none;
  -webkit-backface-visibility: hidden; }

[data-ck-tooltip]::after {
  content: attr(data-ck-tooltip); }

[data-ck-tooltip]::before {
  content: "";
  width: 0;
  height: 0; }

.ck-button,
a.ck-button {
  display: inline-block;
  position: relative;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none; }
  .ck-button::after,
  a.ck-button::after {
    display: block; }
  .ck-button::before,
  a.ck-button::before {
    display: block; }
  .ck-button.ck-button_with-text .ck-button__label,
  a.ck-button.ck-button_with-text .ck-button__label {
    display: block; }
  .ck-button:hover::after,
  a.ck-button:hover::after {
    visibility: visible;
    opacity: 1; }
  .ck-button:hover::before,
  a.ck-button:hover::before {
    visibility: visible;
    opacity: 1; }
  .ck-button:focus:not(:hover)::after,
  a.ck-button:focus:not(:hover)::after {
    display: none; }
  .ck-button:focus:not(:hover)::before,
  a.ck-button:focus:not(:hover)::before {
    display: none; }
  .ck-button .ck-button__label,
  a.ck-button .ck-button__label {
    display: none; }

.ck-toolbar {
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none; }
  .ck-toolbar__separator {
    display: inline-block; }
  .ck-toolbar__newline {
    display: block;
    clear: left; }

.ck-dropdown {
  display: inline-block;
  position: relative; }
  .ck-dropdown::after {
    content: '';
    width: 0;
    height: 0;
    pointer-events: none;
    z-index: 1;
    position: absolute;
    top: 50%;
    transform: translate(0, -50%); }

.ck-dropdown__panel {
  -webkit-backface-visibility: hidden;
  display: none;
  z-index: 999;
  position: absolute;
  left: 0px;
  transform: translateY(100%); }
  .ck-dropdown__panel-visible {
    display: inline-block; }

.ck-list {
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none; }
  .ck-list__item {
    display: block; }

.ck-label {
  display: block; }

.cke-voice-label {
  display: none; }

.ck-balloon-panel {
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  display: none;
  position: absolute;
  z-index: 999; }
  .ck-balloon-panel:before, .ck-balloon-panel:after {
    content: "";
    position: absolute; }
  .ck-balloon-panel:before {
    z-index: 1; }
  .ck-balloon-panel:after {
    z-index: 2; }
  .ck-balloon-panel_arrow_s:before, .ck-balloon-panel_arrow_se:before, .ck-balloon-panel_arrow_sw:before {
    z-index: 1; }
  .ck-balloon-panel_arrow_s:after, .ck-balloon-panel_arrow_se:after, .ck-balloon-panel_arrow_sw:after {
    z-index: 2; }
  .ck-balloon-panel_arrow_n:before, .ck-balloon-panel_arrow_ne:before, .ck-balloon-panel_arrow_nw:before {
    z-index: 1; }
  .ck-balloon-panel_arrow_n:after, .ck-balloon-panel_arrow_ne:after, .ck-balloon-panel_arrow_nw:after {
    z-index: 2; }
  .ck-balloon-panel_visible {
    display: block; }

.ck-floating-panel {
  position: absolute;
  display: none; }
  .ck-floating-panel_active {
    display: block; }

.ck-editor .ck-toolbar.ck-toolbar_sticky {
  position: fixed;
  top: 0; }
  .ck-editor .ck-toolbar.ck-toolbar_sticky.ck-toolbar_sticky_bottom-limit {
    top: auto;
    position: absolute; }

/**
 * Colors configured by the user.
 *
 * @type Map
 * @example
 *		$ck-colors: ( 'foreground': red );
 * @see $_ck-colors
 */
/**
 * Internal map with default colors.
 *
 * @type Map
 * @see ck-color-add
 */
/**
 * Returns a color of given name and lightness offset.
 *
 * @param {String} $name [ 'background' ] - Name of the color.
 * @param {Number} $offset [ 0 ] - Offset of the lightness.
 * @return {String}
 * @see $_ck-colors
 */
/**
 * Returns a borderâ€“color for a given name and lightness offset.
 *
 * @param {String} $name [ 'background' ] - Name of the color.
 * @param {Number} $offset [ 0 ] - Offset of the lightness.
 * @return {String}
 * @see $ck-color
 */
/**
 * Adds a color to internal color map.
 *
 * @example
 *		@include ck-color-add( ( 'special': yellow, 'hover': #00FF00 ) );
 * @param {Map} $map - A map with new colors.
 * @see $_ck-colors
 */
/**
 * Base font size.
 *
 * @see $ck-font-sizes
 */
/**
 * Base font face.
 *
 */
/**
 * Base font sizes for scaling.
 *
 * @see ck-font-size
 */
/**
 * Returns font-size in units for given level.
 *
 * @param {Number} $level [ 0 ] - Size of the font.
 * @return {String}
 * @see $ck-font-sizes
 * @see $ck-font-size-base
 */
/**
 * Default border-radius value.
 *
 */
/**
 * Implements rounded corner interface for .ck-rounded-corners class.
 *
 * @see $ck-border-radius
 */
/**
 * Default spacing value ("unit").
 *
 */
/**
 * Internal map with default spacings.
 *
 * @type Map
 * @see ck-spacing
 */
/**
 * Returns a spacing value with units for given name.
 *
 * @param {String} $spacing [ 'standard' ] - Spacing level.
 * @return {String}
 * @see $ck-def-spacing
 * @see $ck-def-spacings
 */
/**
 * A visual style of focused element's outer shadow.
 */
/**
 * A visual style of focused element's border or outline.
 */
/**
 * A class which indicates that an element holding it is disabled.
 */
.ck-disabled {
  opacity: .5; }

/**
 * A visual style of focused element's border or outline.
 */
/**
 * Brings visual styling for :focus state.
 */
/**
 * A visual style of element's inner shadow (i.e. input).
 */
/**
 * A visual style of element's drop shadow (i.e. panel).
 */
/**
 * A helper to combine multiple shadows.
 */
/**
 * Gives an element a drop shadow so it looks like a floating panel.
 */
/**
 * Resets an element, ignoring its children.
 */
.ck-reset, .ck-reset_all, .ck-reset_all *, .ck-reset_all a, .ck-reset_all textarea {
  margin: 0;
  padding: 0;
  border: 0;
  background: transparent;
  text-decoration: none;
  vertical-align: middle;
  transition: none; }

/**
 * Resets an element AND its children.
 */
.ck-reset_all, .ck-reset_all *, .ck-reset_all a, .ck-reset_all textarea {
  border-collapse: collapse;
  font: normal normal normal 12px Helvetica, Arial, Tahoma, Verdana, Sans-Serif;
  color: #333333;
  text-align: left;
  white-space: nowrap;
  cursor: auto;
  float: none; }

.ck-reset_all .ck-rtl * {
  text-align: right; }

.ck-reset_all iframe {
  vertical-align: inherit; }

.ck-reset_all textarea {
  white-space: pre-wrap; }

.ck-reset_all textarea,
.ck-reset_all input[type="text"],
.ck-reset_all input[type="password"] {
  cursor: text; }

.ck-reset_all textarea[disabled],
.ck-reset_all input[type="text"][disabled],
.ck-reset_all input[type="password"][disabled] {
  cursor: default; }

.ck-reset_all fieldset {
  padding: 10px;
  border: 2px groove #E0DFE3; }

.ck-reset_all button::-moz-focus-inner {
  padding: 0;
  border: 0; }

svg.ck-icon {
  width: 1.66667em;
  height: 1.66667em; }

[data-ck-tooltip]::after {
  left: 50%;
  transition: opacity .2s ease-in-out .2s; }

[data-ck-tooltip]::before {
  left: 50%;
  transition: opacity .2s ease-in-out .2s; }

[data-ck-tooltip]::after {
  border-radius: 2px;
  color: white;
  font-size: 0.7rem;
  background: #333333;
  padding: 0.4em 0.64em; }

[data-ck-tooltip]::before {
  border-style: solid; }

/**
 * A class once applied displays the tooltip south of the element.
 *
 *       [element]
 *           ^
 *     +-----------+
 *     |  Tooltip  |
 *     +-----------+
 */
.ck-tooltip_s::after {
  bottom: -4px;
  transform: translate(-50%, 100%); }

.ck-tooltip_s::before {
  bottom: 0;
  transform: translate(-50%, 100%);
  border-color: transparent transparent #333333 transparent;
  border-width: 0 5px 5px 5px; }

/**
 * A class once applied displays the tooltip north of the element.
 *
 *     +-----------+
 *     |  Tooltip  |
 *     +-----------+
 *           V
 *       [element]
 */
.ck-tooltip_n::after {
  top: -4px;
  transform: translate(-50%, -100%); }

.ck-tooltip_n::before {
  top: 0;
  transform: translate(-50%, -100%);
  border-color: #333333 transparent transparent transparent;
  border-width: 5px 5px 0 5px; }

/**
 * Implements a button of given background color.
 *
 * @param {String} $color - Background color of the button.
 */
/**
 * Implements button states.
 *
 * @param {String} $color - Background color of the button.
 */
/**
 * A helper to define buttonâ€“specific icon styles.
 *
 */
.ck-button,
a.ck-button {
  background: white;
  border-color: #bfbfbf;
  border-width: 1px;
  border-style: solid;
  white-space: nowrap;
  cursor: default;
  vertical-align: middle;
  padding: 0.4em;
  line-height: 1.66667; }
  .ck-button:not(.ck-disabled):hover, .ck-button:not(.ck-disabled):focus,
  a.ck-button:not(.ck-disabled):hover,
  a.ck-button:not(.ck-disabled):focus {
    background: #e6e6e6;
    border-color: #a6a6a6; }
  .ck-button:not(.ck-disabled):active,
  a.ck-button:not(.ck-disabled):active {
    background: #d9d9d9;
    border-color: #999999;
    box-shadow: inset 0 2px 2px #bfbfbf; }
  .ck-button.ck-rounded-corners,
  .ck-rounded-corners .ck-button,
  a.ck-button.ck-rounded-corners,
  .ck-rounded-corners
  a.ck-button {
    border-radius: 2px; }
  .ck-button:focus,
  a.ck-button:focus {
    outline: none;
    border: 1px solid #6ab5f9;
    box-shadow: 0 0 3px 2px #9bcdfb; }
  .ck-button .ck-icon,
  a.ck-button .ck-icon {
    float: left; }
  .ck-button.ck-button_with-text,
  a.ck-button.ck-button_with-text {
    padding: 0.4em 0.8em; }
    .ck-button.ck-button_with-text .ck-icon,
    a.ck-button.ck-button_with-text .ck-icon {
      margin-left: -0.4em;
      margin-right: 0.4em; }
    .ck-button.ck-button_with-text .ck-button__label,
    a.ck-button.ck-button_with-text .ck-button__label {
      display: block; }
  .ck-button.ck-on,
  a.ck-button.ck-on {
    background: #f7f7f7;
    border-color: #b9b9b9; }
    .ck-button.ck-on:not(.ck-disabled):hover, .ck-button.ck-on:not(.ck-disabled):focus,
    a.ck-button.ck-on:not(.ck-disabled):hover,
    a.ck-button.ck-on:not(.ck-disabled):focus {
      background: #dedede;
      border-color: #a1a1a1; }
    .ck-button.ck-on:not(.ck-disabled):active,
    a.ck-button.ck-on:not(.ck-disabled):active {
      background: #d2d2d2;
      border-color: #949494;
      box-shadow: inset 0 2px 2px #b9b9b9; }
  .ck-button-action,
  a.ck-button-action {
    background: #61b145;
    border-color: #498534;
    text-shadow: 0 -1px #4e8e37;
    color: white; }
    .ck-button-action:not(.ck-disabled):hover, .ck-button-action:not(.ck-disabled):focus,
    a.ck-button-action:not(.ck-disabled):hover,
    a.ck-button-action:not(.ck-disabled):focus {
      background: #579f3e;
      border-color: #3f732d; }
    .ck-button-action:not(.ck-disabled):active,
    a.ck-button-action:not(.ck-disabled):active {
      background: #52963b;
      border-color: #3a6a29;
      box-shadow: inset 0 2px 2px #498534; }
    .ck-button-action:hover, .ck-button-action:focus, .ck-button-action:active,
    a.ck-button-action:hover,
    a.ck-button-action:focus,
    a.ck-button-action:active {
      text-shadow: 0 -1px #3a6a29; }
  .ck-button-bold,
  a.ck-button-bold {
    font-weight: bold; }
  .ck-button .ck-icon use,
  .ck-button .ck-icon use *,
  a.ck-button .ck-icon use,
  a.ck-button .ck-icon use * {
    color: inherit; }
  .ck-button .ck-button__label,
  a.ck-button .ck-button__label {
    float: left;
    line-height: inherit;
    font-size: inherit;
    font-weight: inherit;
    color: inherit;
    cursor: inherit; }

.ck-toolbar {
  line-height: 1;
  padding: 0.4em;
  border: 1px solid #bfbfbf;
  white-space: initial;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none; }
  .ck-toolbar.ck-rounded-corners,
  .ck-rounded-corners .ck-toolbar {
    border-radius: 2px; }
  .ck-toolbar__separator {
    width: 1px;
    height: calc( 1em + 2 * 0.64em);
    vertical-align: middle;
    background: #bfbfbf; }
  .ck-toolbar__newline {
    height: 0.4em; }
  .ck-toolbar > * {
    margin-right: 0.4em; }
  .ck-toolbar > *:last-child {
    margin-right: 0; }
  .ck-toolbar-container .ck-toolbar {
    border: 0; }

.ck-dropdown::after {
  border-style: solid;
  border-width: .4em .4em 0 .4em;
  border-color: #707070 transparent;
  right: 0.8em; }

.ck-dropdown .ck-button.ck-dropdown__button {
  padding-right: 1.6em; }
  .ck-dropdown .ck-button.ck-dropdown__button .ck-button__label {
    width: 7em;
    overflow: hidden;
    text-overflow: ellipsis; }

.ck-dropdown__panel {
  border: 1px solid #b9b9b9;
  bottom: 1px;
  background: white;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2); }
  .ck-dropdown__panel.ck-rounded-corners,
  .ck-rounded-corners .ck-dropdown__panel {
    border-radius: 2px; }

.ck-list {
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  list-style-type: none;
  background: white; }
  .ck-list.ck-rounded-corners,
  .ck-rounded-corners .ck-list {
    border-radius: 2px; }
  .ck-list__item {
    padding: 0.64em;
    cursor: default;
    min-width: 12em; }
    .ck-list__item:hover, .ck-list__item:focus {
      background: #f7f7f7; }
    .ck-list__item:focus {
      box-shadow: 0 0 3px 2px #9bcdfb;
      position: relative;
      z-index: 1;
      outline: none; }
    .ck-list__item:last-of-type {
      border: none; }
    .ck-list__item_active {
      background: #1a8bf1;
      color: white; }
      .ck-list__item_active:hover, .ck-list__item_active:focus {
        background: #0e7ee2; }

.ck-label {
  font-weight: bold; }

.ck-input-text {
  box-shadow: 2px 2px 3px #e6e6e6 inset;
  border: 1px solid #b9b9b9;
  padding: 0.64em;
  min-width: 250px; }
  .ck-input-text.ck-rounded-corners,
  .ck-rounded-corners .ck-input-text {
    border-radius: 2px; }
  .ck-input-text:focus {
    outline: none;
    border: 1px solid #6ab5f9;
    box-shadow: 0 0 3px 2px #9bcdfb, 2px 2px 3px #e6e6e6 inset; }

.ck-balloon-panel {
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2);
  min-width: 50px;
  min-height: 15px;
  background: white;
  border: 1px solid #b9b9b9; }
  .ck-balloon-panel.ck-rounded-corners,
  .ck-rounded-corners .ck-balloon-panel {
    border-radius: 2px; }
  .ck-balloon-panel.ck-balloon-panel_with-arrow:before, .ck-balloon-panel.ck-balloon-panel_with-arrow:after {
    width: 0;
    height: 0;
    border-style: solid; }
  .ck-balloon-panel.ck-balloon-panel_arrow_n:before, .ck-balloon-panel.ck-balloon-panel_arrow_n:after, .ck-balloon-panel.ck-balloon-panel_arrow_ne:before, .ck-balloon-panel.ck-balloon-panel_arrow_ne:after, .ck-balloon-panel.ck-balloon-panel_arrow_nw:before, .ck-balloon-panel.ck-balloon-panel_arrow_nw:after {
    border-width: 0 10px 15px 10px; }
  .ck-balloon-panel.ck-balloon-panel_arrow_n:before, .ck-balloon-panel.ck-balloon-panel_arrow_ne:before, .ck-balloon-panel.ck-balloon-panel_arrow_nw:before {
    border-color: transparent transparent #b9b9b9 transparent; }
  .ck-balloon-panel.ck-balloon-panel_arrow_n:after, .ck-balloon-panel.ck-balloon-panel_arrow_ne:after, .ck-balloon-panel.ck-balloon-panel_arrow_nw:after {
    border-color: transparent transparent white transparent;
    margin-top: 2px; }
  .ck-balloon-panel.ck-balloon-panel_arrow_s:before, .ck-balloon-panel.ck-balloon-panel_arrow_s:after, .ck-balloon-panel.ck-balloon-panel_arrow_se:before, .ck-balloon-panel.ck-balloon-panel_arrow_se:after, .ck-balloon-panel.ck-balloon-panel_arrow_sw:before, .ck-balloon-panel.ck-balloon-panel_arrow_sw:after {
    border-width: 15px 10px 0 10px; }
  .ck-balloon-panel.ck-balloon-panel_arrow_s:before, .ck-balloon-panel.ck-balloon-panel_arrow_se:before, .ck-balloon-panel.ck-balloon-panel_arrow_sw:before {
    border-color: #b9b9b9 transparent transparent; }
  .ck-balloon-panel.ck-balloon-panel_arrow_s:after, .ck-balloon-panel.ck-balloon-panel_arrow_se:after, .ck-balloon-panel.ck-balloon-panel_arrow_sw:after {
    border-color: white transparent transparent transparent;
    margin-bottom: 2px; }
  .ck-balloon-panel.ck-balloon-panel_arrow_n:before, .ck-balloon-panel.ck-balloon-panel_arrow_n:after {
    left: 50%;
    margin-left: -10px;
    top: -15px; }
  .ck-balloon-panel.ck-balloon-panel_arrow_ne:before, .ck-balloon-panel.ck-balloon-panel_arrow_ne:after {
    left: 20px;
    top: -15px; }
  .ck-balloon-panel.ck-balloon-panel_arrow_nw:before, .ck-balloon-panel.ck-balloon-panel_arrow_nw:after {
    right: 20px;
    top: -15px; }
  .ck-balloon-panel.ck-balloon-panel_arrow_s:before, .ck-balloon-panel.ck-balloon-panel_arrow_s:after {
    left: 50%;
    margin-left: -10px;
    bottom: -15px; }
  .ck-balloon-panel.ck-balloon-panel_arrow_se:before, .ck-balloon-panel.ck-balloon-panel_arrow_se:after {
    left: 20px;
    bottom: -15px; }
  .ck-balloon-panel.ck-balloon-panel_arrow_sw:before, .ck-balloon-panel.ck-balloon-panel_arrow_sw:after {
    right: 20px;
    bottom: -15px; }
  .ck-balloon-panel.ck-toolbar-container_arrow_n:after, .ck-balloon-panel.ck-toolbar-container_arrow_ne:after, .ck-balloon-panel.ck-toolbar-container_arrow_nw:after {
    border-bottom-color: #f7f7f7; }
  .ck-balloon-panel.ck-toolbar-container_arrow_s:after, .ck-balloon-panel.ck-toolbar-container_arrow_se:after, .ck-balloon-panel.ck-toolbar-container_arrow_sw:after {
    border-top-color: #f7f7f7; }

.ck-editor-toolbar {
  border-radius: 0; }
  .ck-editor-toolbar .ck-button {
    border-width: 0; }
    .ck-editor-toolbar .ck-button:not(:hover):not(:focus):not(.ck-on), .ck-editor-toolbar .ck-button.ck-disabled {
      background: #f7f7f7; }
    .ck-editor-toolbar .ck-button.ck-on {
      background: #dedede;
      border-color: #a1a1a1; }
      .ck-editor-toolbar .ck-button.ck-on:not(.ck-disabled):hover, .ck-editor-toolbar .ck-button.ck-on:not(.ck-disabled):focus {
        background: #c6c6c6;
        border-color: #888888; }
      .ck-editor-toolbar .ck-button.ck-on:not(.ck-disabled):active {
        background: #b9b9b9;
        border-color: #7c7c7c;
        box-shadow: inset 0 2px 2px #a1a1a1; }
  .ck-editor-toolbar .ck-dropdown__button {
    border-width: 1px; }
    .ck-editor-toolbar .ck-dropdown__button:not(:hover):not(:focus):not(.ck-on) {
      background: white; }
  .ck-toolbar-container .ck-editor-toolbar {
    background: #f7f7f7; }

.ck-editor .ck-toolbar.ck-toolbar_sticky {
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2);
  border: 1px solid #bfbfbf;
  border-width: 0 0 1px;
  background: #f7f7f7; }

.ck-editor {
  position: relative; }
  .ck-editor.ck-rounded-corners,
  .ck-rounded-corners .ck-editor {
    border-radius: 2px; }
  .ck-editor .ck-editor__top .ck-toolbar {
    border-top: 0;
    border-left: 0;
    border-right: 0; }
  .ck-editor .ck-editor__main {
    background: white; }
  .ck-editor .ck-editor__bottom {
    border-bottom: 0;
    border-left: 0;
    border-right: 0;
    padding: 0.8em; }
  .ck-editor .ck-editor__editable.ck-focused {
    outline: 1px solid #6ab5f9;
    box-shadow: 2px 2px 3px #e6e6e6 inset; }
  .ck-editor .ck-editor__editable_inline {
    overflow: auto;
    padding: 0 0.8em; }

.ck-editor,
.ck-editor-bottom {
  background: #f7f7f7;
  border: 1px solid #b9b9b9; }
@charset "UTF-8";
/**
 * Colors configured by the user.
 *
 * @type Map
 * @example
 *		$ck-colors: ( 'foreground': red );
 * @see $_ck-colors
 */
/**
 * Internal map with default colors.
 *
 * @type Map
 * @see ck-color-add
 */
/**
 * Returns a color of given name and lightness offset.
 *
 * @param {String} $name [ 'background' ] - Name of the color.
 * @param {Number} $offset [ 0 ] - Offset of the lightness.
 * @return {String}
 * @see $_ck-colors
 */
/**
 * Returns a borderâ€“color for a given name and lightness offset.
 *
 * @param {String} $name [ 'background' ] - Name of the color.
 * @param {Number} $offset [ 0 ] - Offset of the lightness.
 * @return {String}
 * @see $ck-color
 */
/**
 * Adds a color to internal color map.
 *
 * @example
 *		@include ck-color-add( ( 'special': yellow, 'hover': #00FF00 ) );
 * @param {Map} $map - A map with new colors.
 * @see $_ck-colors
 */
/**
 * A visual style of element's inner shadow (i.e. input).
 */
/**
 * A visual style of element's drop shadow (i.e. panel).
 */
/**
 * A helper to combine multiple shadows.
 */
/**
 * Gives an element a drop shadow so it looks like a floating panel.
 */
/**
 * A visual style of focused element's outer shadow.
 */
/**
 * A visual style of focused element's border or outline.
 */
/**
 * A class which indicates that an element holding it is disabled.
 */
.ck-disabled {
  opacity: .5; }

/**
 * A visual style of focused element's border or outline.
 */
/**
 * Brings visual styling for :focus state.
 */
/**
 * Default spacing value ("unit").
 *
 */
/**
 * Internal map with default spacings.
 *
 * @type Map
 * @see ck-spacing
 */
/**
 * Returns a spacing value with units for given name.
 *
 * @param {String} $spacing [ 'standard' ] - Spacing level.
 * @return {String}
 * @see $ck-def-spacing
 * @see $ck-def-spacings
 */
.ck-widget {
  margin: 0.8em 0;
  padding: 0; }
  .ck-widget.ck-widget_selected, .ck-widget.ck-widget_selected:hover {
    outline: 3px solid #6ab5f9; }
  .ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected {
    outline: 3px solid #dddddd; }
  .ck-widget:hover {
    outline: 3px solid #ffd25c; }
  .ck-widget .ck-editable.ck-editable_focused, .ck-widget .ck-editable:focus {
    outline: 1px solid #6ab5f9;
    box-shadow: 2px 2px 3px #e6e6e6 inset;
    background-color: white; }
/**
 * Default spacing value ("unit").
 *
 */
/**
 * Internal map with default spacings.
 *
 * @type Map
 * @see ck-spacing
 */
/**
 * Returns a spacing value with units for given name.
 *
 * @param {String} $spacing [ 'standard' ] - Spacing level.
 * @return {String}
 * @see $ck-def-spacing
 * @see $ck-def-spacings
 */
.cke-text-alternative-form {
  padding: 1.2em;
  overflow: hidden; }
  .cke-text-alternative-form .ck-label {
    margin-bottom: 0.4em; }
  .cke-text-alternative-form__actions {
    clear: both;
    padding-top: 1.2em; }
    .cke-text-alternative-form__actions .ck-button {
      float: right; }
      .cke-text-alternative-form__actions .ck-button + .ck-button {
        margin-right: 0.64em; }
        .cke-text-alternative-form__actions .ck-button + .ck-button + .ck-button {
          float: left; }
.ck-editor__editable .image {
  text-align: center;
  clear: both; }
  .ck-editor__editable .image.image-style-side {
    float: right;
    margin-left: 0.8em;
    max-width: 50%; }

.ck-editor__editable .image > img {
  display: block;
  margin: 0 auto;
  max-width: 100%; }
/**
 * Default spacing value ("unit").
 *
 */
/**
 * Internal map with default spacings.
 *
 * @type Map
 * @see ck-spacing
 */
/**
 * Returns a spacing value with units for given name.
 *
 * @param {String} $spacing [ 'standard' ] - Spacing level.
 * @return {String}
 * @see $ck-def-spacing
 * @see $ck-def-spacings
 */
.ck-link-form {
  padding: 1.2em;
  overflow: hidden; }
  .ck-link-form .ck-label {
    margin-bottom: 0.4em; }
  .ck-link-form__actions {
    clear: both;
    padding-top: 1.2em; }
    .ck-link-form__actions .ck-button {
      float: right; }
      .ck-link-form__actions .ck-button + .ck-button {
        margin-right: 0.64em; }
        .ck-link-form__actions .ck-button + .ck-button + .ck-button {
          float: left; }
/**
 * Default spacing value ("unit").
 *
 */
/**
 * Internal map with default spacings.
 *
 * @type Map
 * @see ck-spacing
 */
/**
 * Returns a spacing value with units for given name.
 *
 * @param {String} $spacing [ 'standard' ] - Spacing level.
 * @return {String}
 * @see $ck-def-spacing
 * @see $ck-def-spacings
 */
/**
 * Base font size.
 *
 * @see $ck-font-sizes
 */
/**
 * Base font face.
 *
 */
/**
 * Base font sizes for scaling.
 *
 * @see ck-font-size
 */
/**
 * Returns font-size in units for given level.
 *
 * @param {Number} $level [ 0 ] - Size of the font.
 * @return {String}
 * @see $ck-font-sizes
 * @see $ck-font-size-base
 */
.ck-heading_heading1 {
  font-size: 1.5em; }

.ck-heading_heading2 {
  font-size: 1.3em; }

.ck-heading_heading3 {
  font-size: 1.1em; }

[class*="ck-heading_"] {
  line-height: 21.6px;
  padding: 9.6px; }

[class*="ck-heading_heading"] {
  font-weight: bold; }

.ck-dropdown.ck-heading-dropdown .ck-dropdown__button .ck-button__label {
  width: 8em; }
